/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banking;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Phellogen
 */
public class transfer extends javax.swing.JFrame {
 Connection conn;
    ResultSet rs;
    PreparedStatement pst,ps;
    static String value1,id,td,tc,name,rid;
    /**
     * Creates new form transferfinal
     */
    public transfer() {
       
        super("Home");
        initComponents();
         this.setLocationRelativeTo(null);
        
        conn = javaconnect.ConncerDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        btntransfersearch = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        btnexit1 = new javax.swing.JLabel();
        btnexit2 = new javax.swing.JLabel();
        Calculate = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        MyID = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        MyBalance = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnsearch = new javax.swing.JLabel();
        nowbalance = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnback = new javax.swing.JLabel();
        Transfer = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(246, 246, 246));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("To ");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 510, -1));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setText("Enter ID you wanna transfer");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 260, 50));

        ID.setBackground(new java.awt.Color(246, 246, 246));
        ID.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        ID.setBorder(null);
        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });
        jPanel1.add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 230, 50));

        Name.setEditable(false);
        Name.setBackground(new java.awt.Color(246, 246, 246));
        Name.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        Name.setBorder(null);
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });
        jPanel1.add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 270, 50));

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel7.setText("Transfer Amount");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, 50));

        amount.setBackground(new java.awt.Color(246, 246, 246));
        amount.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        amount.setBorder(null);
        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });
        jPanel1.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 270, 50));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 270, 10));

        btntransfersearch.setBackground(new java.awt.Color(246, 246, 246));
        btntransfersearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btntransfersearch.setOpaque(true);
        btntransfersearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btntransfersearchMouseClicked(evt);
            }
        });
        jPanel1.add(btntransfersearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 40, 40));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 270, 10));

        btnexit1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnexit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_images/darkmini.png"))); // NOI18N
        btnexit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnexit1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnexit1MousePressed(evt);
            }
        });
        jPanel1.add(btnexit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 40, 40));

        btnexit2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnexit2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_images/darkexit.png"))); // NOI18N
        btnexit2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnexit2MouseClicked(evt);
            }
        });
        jPanel1.add(btnexit2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 40, 40));

        Calculate.setBackground(new java.awt.Color(194, 24, 91));
        Calculate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CalculateMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CalculateMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CalculateMouseEntered(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Calculate");

        javax.swing.GroupLayout CalculateLayout = new javax.swing.GroupLayout(Calculate);
        Calculate.setLayout(CalculateLayout);
        CalculateLayout.setHorizontalGroup(
            CalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CalculateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addContainerGap())
        );
        CalculateLayout.setVerticalGroup(
            CalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CalculateLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(Calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 560, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 560, 680));

        jPanel3.setBackground(new java.awt.Color(63, 81, 181));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("From");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 510, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Enter your ID");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 130, 50));

        MyID.setBackground(new java.awt.Color(63, 81, 181));
        MyID.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        MyID.setForeground(new java.awt.Color(255, 255, 255));
        MyID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        MyID.setBorder(null);
        MyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MyIDActionPerformed(evt);
            }
        });
        MyID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MyIDKeyReleased(evt);
            }
        });
        jPanel3.add(MyID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 210, 50));

        jLabel41.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Now Balance");
        jPanel3.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, 210, 50));

        MyBalance.setEditable(false);
        MyBalance.setBackground(new java.awt.Color(63, 81, 181));
        MyBalance.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        MyBalance.setForeground(new java.awt.Color(255, 255, 255));
        MyBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        MyBalance.setBorder(null);
        MyBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MyBalanceActionPerformed(evt);
            }
        });
        MyBalance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MyBalanceKeyReleased(evt);
            }
        });
        jPanel3.add(MyBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 330, 50));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 250, 10));

        btnsearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_images/whitesearch.png"))); // NOI18N
        btnsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsearchMouseClicked(evt);
            }
        });
        jPanel3.add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 40, 40));

        nowbalance.setEditable(false);
        nowbalance.setBackground(new java.awt.Color(63, 81, 181));
        nowbalance.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        nowbalance.setForeground(new java.awt.Color(255, 255, 255));
        nowbalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nowbalance.setBorder(null);
        nowbalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nowbalanceActionPerformed(evt);
            }
        });
        jPanel3.add(nowbalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 330, 50));

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Your Balance");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 210, 50));

        btnback.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_images/mwhiteback.png"))); // NOI18N
        btnback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnbackMouseClicked(evt);
            }
        });
        jPanel3.add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 640, 40, 40));

        Transfer.setBackground(new java.awt.Color(246, 246, 246));
        Transfer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TransferMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TransferMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TransferMouseEntered(evt);
            }
        });

        jLabel71.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(63, 81, 181));
        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel71.setText("Transfer");

        javax.swing.GroupLayout TransferLayout = new javax.swing.GroupLayout(Transfer);
        Transfer.setLayout(TransferLayout);
        TransferLayout.setHorizontalGroup(
            TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel71, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );
        TransferLayout.setVerticalGroup(
            TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TransferLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.add(Transfer, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 560, 130, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MyIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MyIDActionPerformed

    private void MyIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MyIDKeyReleased
        // TODO add your handling code here:
     
         
    }//GEN-LAST:event_MyIDKeyReleased

    private void MyBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MyBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MyBalanceActionPerformed

    private void MyBalanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MyBalanceKeyReleased
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_MyBalanceKeyReleased

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_NameActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void nowbalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nowbalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nowbalanceActionPerformed

    private void CalculateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalculateMouseClicked
        String sql1 = "select * from Generator where Count='1'";    
       try {
           ps  = conn.prepareStatement(sql1);
           rs = ps.executeQuery();
           if(rs.next()){
                
                MyID.setText(rs.getString("Current_Account"));
                id = rs.getString("Current_Account");
           }
       } catch (SQLException ex) {
           Logger.getLogger(withdraw.class.getName()).log(Level.SEVERE, null, ex);
       }
         String sql="select * from Customer_Data where ID='"+id+"'";
            try {
                ps = conn.prepareStatement(sql);
                
                rs = ps.executeQuery();
                if(rs.next()){
                
                String show3= rs.getString("Current_Amount");
                amount.setText(show3);
               
               
                }
                //rs=stmt.executeQuery(sql);
		

            } catch (Exception e) {
                e.printStackTrace();
            }   
        String str=amount.getText();
        String str1=MyID.getText();
        
        if(str.equals(""))
        {
            JOptionPane.showMessageDialog(this, "You must enter your transfer amount ");
        }
        if(str1.equals(""))
        {
             JOptionPane.showMessageDialog(this, "You must enter your ID ");
        }
        
        else{
            try{
            String a = MyBalance.getText();
            String a1 = amount.getText();
            int aint = Integer.parseInt(a1);
            if (aint < 0){
                JOptionPane.showMessageDialog(this, "Invalid Input!");
            }
            else{
                int calculate = Integer.parseInt(a)-Integer.parseInt(a1);
            String calculate1 = String.valueOf(calculate);
             if (calculate < 0 ){
                 JOptionPane.showMessageDialog(this, "Your transfer amount is more than your balance");
             }
             else{nowbalance.setText(calculate1);}
            }
          }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_CalculateMouseClicked

    private void TransferMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransferMouseClicked
        String str=MyID.getText();
         td = MyID.getText();
        String str1=ID.getText();
        tc = ID.getText();
        String str2=amount.getText();
        
        
        if(str.equals("") && str1.equals("") && str2.equals(""))
                JOptionPane.showMessageDialog(this, "You must enter the necessary records ");
        else if(str.equals(""))
                JOptionPane.showMessageDialog(this, "You must enter your ID ");
        else if(str1.equals(""))
                JOptionPane.showMessageDialog(this, "You must enter ID of your transfer account ");
        else if(str2.equals(""))
                JOptionPane.showMessageDialog(this, "You must enter the transfer amount ");
        else{
            try{
                String sql = "select * from CUSTOMER_DATA where ID=?";
                pst = conn.prepareStatement(sql);
                pst.setString(1, ID.getText());
                
                //String id1 = MyID.getText();
               // String id2 = ID.getText();
               
               if (str.equals(str1))
               {
                   JOptionPane.showMessageDialog(null, "Enter Correct ID");
               }
               else {String a = MyBalance.getText();
            String a1 = amount.getText();
            int aint = Integer.parseInt(a1);
            if (aint < 0 ){
                JOptionPane.showMessageDialog(this, "Invalid Input!");
            }
            else {TransferS();}}
            
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e);
            }
            rid = ID.getText();
            String sql8 ="update Customer_Data set CT='"+1+"',REC='"+td+"' where ID ='"+rid+"'";
            try {
                ps = conn.prepareStatement(sql8);
                ps.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(transfer.class.getName()).log(Level.SEVERE, null, ex);
            }
            String sql7 = "insert into History(ID,Name,Type,Amount,Date,Time,Trasnfer_Person)values(?,?,?,?,?,?,?)";
            try {
                String a = amount.getText();
                pst = conn.prepareStatement(sql7);
                pst.setString(1, td);
                pst.setString(2,name);
                pst.setString(3,"Transfer");
                pst.setString(4,a);
                String text = new SimpleDateFormat("yyyy/MM/dd", Locale.FRANCE).format(new Date());
                pst.setString(5,text);
                Date d = new Date();
                SimpleDateFormat s=new SimpleDateFormat("hh:mm:ss");
               String tc = (s.format(d));
               pst.setString(6, tc);
               String ic = ID.getText();
               pst.setString(7, ic);
               pst.execute();
            } catch (SQLException ex) {
                Logger.getLogger(transfer.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_TransferMouseClicked

    public void TransferS(){
    
        try{
            String a = MyBalance.getText();
            String a1 = amount.getText();
            int a1int = Integer.parseInt(a1);
            int aint = Integer.parseInt(a);
            
            if (a1int > aint){
                JOptionPane.showMessageDialog(this, "Your transfer amount is more than your balance");
            }
            
            else {
            
        TransferA();
        //TransferB();
        TransferC();
        JOptionPane.showMessageDialog(null, "Successfully Transfered");
        
        TransferD();
            }
        }
        catch (Exception e ){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }
    
    private void btnsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsearchMouseClicked
          String str=MyID.getText();
        if(str.equals(""))
        {
            JOptionPane.showMessageDialog(this, "You must enter Your ID");
        }
        else{
        try{
            String sql="select * from Customer_Data where ID=?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, MyID.getText());
            rs=pst.executeQuery();
            if(rs.next()){
                String addid = rs.getString("ID");
                MyID.setText(addid);
                name = rs.getString("Name");
                String addname=rs.getString("CURRENT_AMOUNT");
                MyBalance.setText(addname);
                rs.close();
                pst.close();
            }else{
                JOptionPane.showMessageDialog(null, "Enter Correct ID");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_btnsearchMouseClicked

    private void btntransfersearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btntransfersearchMouseClicked
        String str=ID.getText();
        if(str.equals(""))
        {
            JOptionPane.showMessageDialog(this, "You must enter ID of your transfer ");
        }
        else{
        try{
            String id2=ID.getText();
            String sql="select * from Customer_Data where ID='"+id2+"'";
            pst=conn.prepareStatement(sql);
            
            
            String id1=MyID.getText();
            
            
            if (id1.equals(id2)){
                JOptionPane.showMessageDialog(null, "Enter Correct ID");
            }
            else{
                rs=pst.executeQuery();
                if(rs.next()){
                    String addid = rs.getString("ID");
                    ID.setText(addid);
                   
                    
                    String addbalance=rs.getString("CURRENT_AMOUNT");
                    amount.setText(addbalance);
                    rs.close();
                    pst.close();
                }else{
                    JOptionPane.showMessageDialog(null, "Enter Correct ID");
                }
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_btntransfersearchMouseClicked

    private void btnexit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnexit1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnexit1MouseClicked

    private void btnexit1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnexit1MousePressed
        // TODO add your handling code here:
        this.setState(ICONIFIED);
    }//GEN-LAST:event_btnexit1MousePressed

    private void btnexit2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnexit2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnexit2MouseClicked

    private void btnbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbackMouseClicked
        userHome uhome=new userHome();
        uhome.setVisible(true);
        uhome.pack();
        uhome.setLocationRelativeTo(null);
        uhome.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btnbackMouseClicked

    private void TransferMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransferMouseEntered
        setColortransfer(Transfer);
    }//GEN-LAST:event_TransferMouseEntered

    private void TransferMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransferMouseExited
       resetColortransfer(Transfer);
    }//GEN-LAST:event_TransferMouseExited

    private void CalculateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalculateMouseEntered
        setColorcalculate(Calculate);
    }//GEN-LAST:event_CalculateMouseEntered

    private void CalculateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalculateMouseExited
        resetColorcalculate(Calculate);
    }//GEN-LAST:event_CalculateMouseExited

    /**
     * @param args the command line arguments
     */
    
    
     public void TransferA(){
        try{
            String id =MyID.getText();
            String value1=nowbalance.getText();
            
            String sql = "update Customer_Data set CURRENT_AMOUNT='"+value1+"' where ID='"+id+"'";
            pst=conn.prepareStatement(sql);
            pst.executeUpdate();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
     
    /*public void TransferB(){
        try{
            
            String id = ID.getText();
            String sql;
            sql="select * from One.Customer where ID=?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, ID.getText());
            rs=pst.executeQuery();
            String value1 = null;
            if(rs.next()){
                String addbalance=rs.getString("BALANCE");
                value1=addbalance;
                rs.close();
                pst.close();
            }else{
                JOptionPane.showMessageDialog(null, "Enter Correct ID");
            }
            
            
            sql = "update One.CUSTOMER set BALANCE='"+value1+"' where ID='"+id+"'";
            pst=conn.prepareStatement(sql);
            pst.executeUpdate();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }*/
     public void TransferC(){
        try{
            String id =ID.getText();
            String sql4 = "select * from Customer_Data where ID='"+id+"'";
            pst = conn.prepareStatement(sql4);
            rs = pst.executeQuery();
            if(rs.next()){
                 value1 = rs.getString("Current_Amount");
                rs.close();
                pst.close();
            }
            
            //String value1=amount.getText();
            String value2=amount.getText();
            int value3=Integer.parseInt(value1)+Integer.parseInt(value2);
            
            String sql = "update Customer_Data set CURRENT_AMOUNT='"+value3+"' where ID='"+id+"'";
            pst=conn.prepareStatement(sql);
            pst.executeUpdate();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }   
    }
     public void TransferD(){
    try{
            String sql="select * from Customer_Data where ID=?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, MyID.getText());
            rs=pst.executeQuery();
            if(rs.next()){
                String addid = rs.getString("ID");
                MyID.setText(addid);
                String addname=rs.getString("CURRENT_AMOUNT");
                MyBalance.setText(addname);
                rs.close();
                pst.close();
            }else{
                JOptionPane.showMessageDialog(null, "Enter Correct ID");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
     
     
      void setColortransfer(JPanel panel)
    {
        panel.setBackground(new Color(197, 202, 233));
        
    }
    void resetColortransfer(JPanel panel)
    {
        panel.setBackground(new Color(246,246,246));
        
    }
    
    
       void setColorcalculate(JPanel panel)
    {
        panel.setBackground(new Color(194, 24, 91));
        
    }
    void resetColorcalculate(JPanel panel)
    {
        panel.setBackground(new Color(233, 30, 99));
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Macintosh*".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new transfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Calculate;
    private javax.swing.JTextField ID;
    private javax.swing.JTextField MyBalance;
    private javax.swing.JTextField MyID;
    private javax.swing.JTextField Name;
    private javax.swing.JPanel Transfer;
    private javax.swing.JTextField amount;
    private javax.swing.JLabel btnback;
    private javax.swing.JLabel btnexit1;
    private javax.swing.JLabel btnexit2;
    private javax.swing.JLabel btnsearch;
    private javax.swing.JLabel btntransfersearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField nowbalance;
    // End of variables declaration//GEN-END:variables
}
